@using Umbraco.Cms.Core.Models
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<IPublishedContent>
@using Umbraco.Cms.Core.Models.Blocks
@{
    var accordionsTabs = Model.Value<BlockListModel>("content");
    var count = 0;
	var tabIndex = 0;
}

@{
    if (accordionsTabs != null && accordionsTabs.Any())
    { 
        <div class="tab-section">
            <div class="sub_content">
                <div class="small-section-divider"></div>
                <p class="lead">Know more</p>
                <h3>Frequently Asked <br/>Questions!</h3>
            </div>
            <div class="tabs-container">
                <div class="container">
                    <div class="tabs-swiper">
                        <div class="swiper-wrapper swiper-tabs-wrapper">
                            @foreach(var accordionsTab in accordionsTabs) {
                                var accordionTab = accordionsTab.Content;
                                var addAccordion = accordionTab.Value<BlockListModel>("addAccordion");

                                if (addAccordion != null && addAccordion.Count > 0) {
                                    foreach(var addedAccordion in addAccordion) {
										count++;
                                        var accordTabs = addedAccordion.Content;
                                        var tab = accordTabs.Value("tab");
                                        <div class="swiper-slide tabs-slide" data-tab="tab-@count">@tab</div>
                                    }
                                }
                            }
                        </div>
                        @* Pagination *@
                        <div class="swiper-pagination"></div>
                        @* Navigation *@
                        <div class="swiper-tab-next"></div>
                        <div class="swiper-tab-prev"></div>
                    </div>
					@foreach(var accordionsContent in accordionsTabs) {
						var accordionItem = accordionsContent.Content;
						var addAccordionItem = accordionItem.Value<BlockListModel>("addAccordion");

						if (addAccordionItem != null && addAccordionItem.Count > 0) {
							foreach(var addedAccordion in addAccordionItem) 
							{	
								var accordionLists = addedAccordion.Content;
								var accordionList = accordionLists.Value<BlockListModel>("accordionList");

								tabIndex++;
								<div id="tab-@tabIndex" class="tab-content" style="display: none;">
									@if (accordionList != null && accordionList.Count > 0) {
										foreach (var accordions in accordionList) {
											var accordion = accordions.Content;
											
											<div class="accordion">
												<div class="accordion-header">@accordion.Value("heading")</div>
												<div class="accordion-content">@accordion.Value("description")</div>
											</div>
										}
									}
								</div>
							}
						}
					}
                </div>
            </div>
        </div>
    }
}
